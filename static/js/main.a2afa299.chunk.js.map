{"version":3,"sources":["Component/Filter/Filter.module.css","Component/ContactForm/ContactForm.js","Component/Filter/Filter.js","Component/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js","Component/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","contacts","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","className","this","htmlFor","onChange","type","id","pattern","title","required","Component","Filter","s","SearchContainer","ContName","placeholder","FilterList","onDeleteContact","container","map","item","onClick","btn","App","filter","getFilterSearch","normalizedFilter","toLowerCase","contact","includes","onSearchChange","formSubmitHandler","data","console","log","addContact","find","alert","prevState","prevProps","localStorage","setItem","JSON","stringify","getItem","parsedContact","parse","ContactList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2afa299.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchContainer\":\"Filter_SearchContainer__1odBD\",\"SearchName\":\"Filter_SearchName__2SJ5p\",\"ContName\":\"Filter_ContName__3_co8\",\"InputSearch\":\"Filter_InputSearch__1yWjh\"};","import { Component } from 'react';\nimport shortid from 'shortid';\nimport './ContactForm.css';\n\nclass ContactForm extends Component {\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = e => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"Input-container\" onSubmit={this.handleSubmit}>\n        <h3 className=\"Input-name\"> Name </h3>\n        <label htmlFor={this.nameInputId}>\n          <input\n            className=\"Input\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"name\"\n            id={this.nameInputId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className=\"TelInputContainer\" htmlFor={this.numberInputId}>\n          <h3 className=\"Input-name\"> Number </h3>\n          <input\n            value={this.state.number}\n            onChange={this.handleChange}\n            type=\"tel\"\n            name=\"number\"\n            id={this.numberInputId}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className=\"input-btn\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","// import { Component } from 'react';\nimport React from 'react';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.SearchContainer}>\n    <p className={s.ContName}>Find contacts by name:</p>\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className=\"InputSearch\"\n      placeholder=\"Paul Richardson\"\n    />\n  </label>\n);\n\nexport default Filter;\n","import React from 'react';\nimport s from './ContactList.module.css';\n\nconst FilterList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.container}>\n    {contacts.map(({ name, number, id }) => (\n      <li key={id} className={s.item}>\n        {name}: {number}\n        <button type=\"button\" onClick={() => onDeleteContact(id)} className={s.btn}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\nexport default FilterList;\n","import { Component } from 'react';\nimport './App.css';\nimport shortid from 'shortid';\nimport ContactForm from './Component/ContactForm/ContactForm';\nimport Filter from './Component/Filter/Filter';\nimport ContactList from './Component/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  getFilterSearch = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n  };\n\n  onSearchChange = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  onDeleteContact = id => {\n    this.setState({\n      contacts: this.state.contacts.filter(contact => contact.id !== id),\n    });\n  };\n\n  formSubmitHandler = data => {\n    console.log(data);\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const equalName = this.state.contacts.find(item => item.name === contact.name);\n\n    if (equalName) return alert(`${contact.name} is already in contacts`);\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('обновились контакты');\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  componentDidMount() {\n    const contact = localStorage.getItem('contacts');\n    const parsedContact = JSON.parse(contact);\n\n    if (parsedContact) {\n      this.setState({ contacts: parsedContact });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"Input-form\">\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.addContact} />\n\n          <h2 className=\"SearchName\">Contact</h2>\n          <Filter value={this.state.filter} onChange={this.onSearchChange} />\n\n          <ContactList contacts={this.getFilterSearch()} onDeleteContact={this.onDeleteContact} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__2dzoH\",\"item\":\"ContactList_item__Dx9Ph\",\"btn\":\"ContactList_btn__2bziu\"};"],"sourceRoot":""}